import { failSafe } from "@esri/hub-common";
import { shareItemWithGroup } from "@esri/arcgis-rest-portal";
import { _getSecondPassSharingOptions } from "./_get-second-pass-sharing-options";
import { _getSharingEligibleModels } from "./_get-sharing-eligible-models";
/**
 * Share all the other models to the Site's content and collaboration groups, if
 * those groups were created for the site (depends on user's privs)
 * **DEPRECATED: Use shareItemsToSiteGroups() instead**
 * @param {object} siteModel Site Model
 * @param {Array} solutionModels Array of all models created by the Solution
 * @param {IHubRequestOptions} hubRequestOptions
 * @private
 */
export function _shareItemsToSiteGroups(siteModel, solutionModels, hubRequestOptions) {
    /* tslint:disable no-console */
    console.info("DEPRECATED: _shareItemsToSiteGroups will be removed at v10.0.0. Use shareItemsToSiteGroups instead.");
    return shareItemsToSiteGroups(siteModel, solutionModels, hubRequestOptions);
}
/**
 * Share all the other models to the Site's content and collaboration groups, if
 * those groups were created for the site (depends on user's privs)
 * @param {object} siteModel Site Model
 * @param {Array} solutionModels Array of all models created by the Solution
 * @param {IHubRequestOptions} hubRequestOptions
 * @exported
 */
export function shareItemsToSiteGroups(siteModel, solutionModels, hubRequestOptions) {
    // Create Fail-safe version of share b/c this is not critical
    var failSafeShare = failSafe(shareItemWithGroup, { success: true });
    var groupsToShareTo = _getSecondPassSharingOptions(siteModel);
    // share all items in the solution to the groups, excluding the the site, form
    // and any form feature services
    return _getSharingEligibleModels(siteModel, solutionModels, hubRequestOptions).then(function (eligibleModels) {
        return Promise.all(eligibleModels.reduce(function (acc, m) {
            var itemSharePromises = groupsToShareTo.map(function (g) {
                var opts = {
                    id: m.item.id,
                    groupId: g.id,
                    confirmItemControl: g.confirmItemControl,
                    authentication: hubRequestOptions.authentication,
                };
                return failSafeShare(opts);
            });
            return acc.concat(itemSharePromises);
        }, []));
    });
}
//# sourceMappingURL=_share-items-to-site-groups.js.map