import { getProp } from "@esri/hub-common";
/**
 * To account for complexities in the Solution generation process
 * we need to ensure that the site is linked to the Page before
 * we throw this all through the unlink/delete process
 * @param {Object} siteModel Site Model
 * @param {Objet} pageModel Page Model
 */
export function ensurePageHasSiteEntry(siteModel, pageModel) {
    var siteId = siteModel.item.id;
    var parentInitiativeId = getProp(siteModel, "item.properties.parentInitiativeId");
    // swap initiativeId to siteId
    // for a period of time, this happened during Solution generation
    if (parentInitiativeId) {
        var currentSites = getProp(pageModel, "data.values.sites");
        var initiativeEntry = currentSites.find(function (e) {
            return e.id === parentInitiativeId;
        });
        if (initiativeEntry) {
            initiativeEntry.id = siteId;
        }
    }
    // ensure that we have an entry for the site
    // during solution generation, we can't inject the
    // site id into the page because the page is created
    // before the site item. We need this present so that
    // the unlinkSiteFromPage functions will be able to update
    // the upstream site
    var sites = getProp(pageModel, "data.values.sites");
    var siteEntry = sites.find(function (e) {
        return e.id === siteId;
    });
    if (!siteEntry) {
        pageModel.data.values.sites.push({
            id: siteId,
            title: "Current Site to ensure clean removal"
        });
    }
    return pageModel;
}
//# sourceMappingURL=ensure-page-has-site-entry.js.map