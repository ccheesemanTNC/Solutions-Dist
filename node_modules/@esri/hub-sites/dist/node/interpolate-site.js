"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.interpolateSite = void 0;
const hub_common_1 = require("@esri/hub-common");
/**
 * Wrapper for @esri/hub-common's `interpolate()`
 *
 * Some properties on siteTemplate are nested adlib templates that
 * need to be interpolated at runtime, not template activation time.
 * As such, this wrapper ensures that adlib does not process those
 * properties.
 *
 * Currently ignored properties include:
 * - `data.values.dcatConfig` (legacy DCAT-US 1.1 config with index value paths)
 * - `data.feeds (Home to all feed configs with v3 api value paths)
 *
 * @param siteTemplate
 * @param settings
 * @param transforms
 */
function interpolateSite(siteTemplate, settings, transforms) {
    const template = hub_common_1.cloneObject(siteTemplate);
    // Save nested adlib templates
    const legacyDcatUS11Config = hub_common_1.cloneObject(template.data.values.dcatConfig);
    const feedConfigs = hub_common_1.cloneObject(template.data.feeds);
    // Remove nested adlib templates from the main template so they will not be processed
    delete template.data.values.dcatConfig;
    delete template.data.feeds;
    const siteModel = hub_common_1.interpolate(template, settings, transforms);
    // Attach nested templates onto the interpolated site
    if (legacyDcatUS11Config) {
        siteModel.data.values.dcatConfig = legacyDcatUS11Config;
    }
    if (feedConfigs) {
        siteModel.data.feeds = feedConfigs;
    }
    return siteModel;
}
exports.interpolateSite = interpolateSite;
//# sourceMappingURL=interpolate-site.js.map