"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertPageToTemplate = void 0;
const hub_common_1 = require("@esri/hub-common");
const get_page_item_type_1 = require("./get-page-item-type");
const layout_1 = require("../layout");
const get_site_dependencies_1 = require("../get-site-dependencies");
const _draft_resource_regex_1 = require("../drafts/_draft-resource-regex");
/**
 * Given a Page Model, return a template object
 * @param {Object} model The Page item model to convert into a template
 * @param {IHubRequestOptions} hubRequestOptions IRequestOptions object, with isPortal, and portalSelf
 */
function convertPageToTemplate(model, hubRequestOptions) {
    const tmpl = hub_common_1.cloneObject(model);
    // set things we always want...
    tmpl.type = get_page_item_type_1.getPageItemType(hubRequestOptions.isPortal);
    tmpl.key = `${hub_common_1.propifyString(model.item.title)}_${hub_common_1.createId("i")}`;
    tmpl.itemId = model.item.id;
    // now pass the item off to be normalized
    tmpl.item = hub_common_1.normalizeSolutionTemplateItem(tmpl.item);
    tmpl.data.values.sites = [];
    ["source", "updatedAt", "updatedBy", "folderId", "slug"].forEach((p) => {
        delete tmpl.data.values[p];
    });
    // convert the layout...
    const layoutConversion = layout_1.convertLayoutToTemplate(tmpl.data.values.layout);
    // the conversion can return an array of assets to convert, but for now, we are not using that...
    tmpl.data.values.layout = layoutConversion.layout;
    tmpl.dependencies = get_site_dependencies_1.getSiteDependencies(model);
    // convert any internal references in /data to the item's id into `{{appId}}`
    tmpl.data = hub_common_1.replaceItemId(tmpl.data, tmpl.itemId);
    if (!tmpl.item.properties) {
        tmpl.item.properties = {};
    }
    return hub_common_1.getItemAssets(model.item, hubRequestOptions).then((assets) => {
        // Because we don't want to include the draft resource when clone a page
        // we are filtering out assets that are not 'draft-{timestamp}.json'
        tmpl.assets = assets.filter((asset) => asset.name.search(_draft_resource_regex_1.DRAFT_RESOURCE_REGEX) === -1);
        return tmpl;
    });
}
exports.convertPageToTemplate = convertPageToTemplate;
//# sourceMappingURL=convert-page-to-template.js.map