"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._updateTeamTags = void 0;
const hub_common_1 = require("@esri/hub-common");
const arcgis_rest_portal_1 = require("@esri/arcgis-rest-portal");
/**
 * Update the tags on the teams after the initiative is created
 * Specifically:
 * - add  `hubInitiativeFollowers|<initiaiveId> to the followers group
 * @param {object} initiativeModel Initiative Model
 * @param {object} teams hash of teams
 * @param {IHubRequestOptions} hubRequestOptions
 * @private
 */
function _updateTeamTags(initiativeModel, teams, hubRequestOptions) {
    let prms = Promise.resolve({ success: true });
    // we have a followers group
    // TODO: COVER THIS WITH TESTS (spying wasnt working)
    /* istanbul ignore if */
    if (hub_common_1.getProp(teams, "props.followersGroupId")) {
        // get the followers group out of the teams.groups array
        const followersGroup = teams.groups.find((g) => g.id === teams.props.followersGroupId);
        // now we want to add a tag
        followersGroup.tags.push(`hubInitiativeFollowers|${initiativeModel.item.id}`);
        // now we want to fire off an update
        prms = arcgis_rest_portal_1.updateGroup({
            group: followersGroup,
            authentication: hubRequestOptions.authentication
        });
    }
    return prms;
}
exports._updateTeamTags = _updateTeamTags;
//# sourceMappingURL=_update-team-tags.js.map