"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.unlinkPagesFromSite = void 0;
const hub_common_1 = require("@esri/hub-common");
const unlink_site_and_page_1 = require("./unlink-site-and-page");
/**
 * Given a site, update all the linked page items and remove their
 * references to the site
 * @param {Object} siteModel Site Model
 * @param {IRequestOptions} requestOptions
 */
function unlinkPagesFromSite(siteModel, requestOptions) {
    const linkedPages = hub_common_1.mapBy("id", hub_common_1.getWithDefault(siteModel, "data.values.pages", []));
    // we need to unlink the site from all it's pages. However, these calls *could* fail
    // if the current user lacks rights to save the site/page item, so we just make sure these
    // always resolve. In the Ember service code, we used `allSettled` but that's RSVP special sauce
    const failSafeUnlink = hub_common_1.failSafe(unlink_site_and_page_1.unlinkSiteAndPage);
    return Promise.all(linkedPages.map((pageId) => {
        const opts = Object.assign({
            siteModel,
            pageId
        }, requestOptions);
        return failSafeUnlink(opts);
    }));
}
exports.unlinkPagesFromSite = unlinkPagesFromSite;
//# sourceMappingURL=unlink-pages-from-site.js.map