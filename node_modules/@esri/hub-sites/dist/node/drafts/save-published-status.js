"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.savePublishedStatus = void 0;
const update_site_1 = require("../update-site");
const pages_1 = require("../pages");
const is_site_1 = require("../is-site");
const has_unpublished_changes_1 = require("./has-unpublished-changes");
/**
 * Saves the published status of a site or page model
 * leaving everything else on the model alone.
 *
 * @param siteOrPageModel
 * @param requestOptions
 */
function savePublishedStatus(siteOrPageModel, requestOptions) {
    const allowList = ["item.typeKeywords"]; // only want to save typeKeywords
    const { item } = siteOrPageModel;
    let prms;
    if (is_site_1.isSite(item)) {
        // when saving a draft site, we need to prevent the schemaVersion
        // from being updated. otherwise, if the user does not publish the draft,
        // functionality potentially will be broken for all users because the item
        // reflects the most recent schemaVersion without any of the actual schema
        // changes
        const isUnpublished = has_unpublished_changes_1.hasUnpublishedChanges(siteOrPageModel);
        prms = update_site_1.updateSite(siteOrPageModel, Object.assign(Object.assign({}, requestOptions), { allowList, updateVersions: !isUnpublished }));
    }
    else if (pages_1.isPage(item)) {
        prms = pages_1.updatePage(siteOrPageModel, Object.assign(Object.assign({}, requestOptions), { allowList }));
    }
    else {
        throw TypeError("@esri/hub-sites: only page or site models have a published state");
    }
    return prms;
}
exports.savePublishedStatus = savePublishedStatus;
//# sourceMappingURL=save-published-status.js.map