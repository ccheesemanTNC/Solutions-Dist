"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchDraft = void 0;
const hub_common_1 = require("@esri/hub-common");
const arcgis_rest_portal_1 = require("@esri/arcgis-rest-portal");
const _get_most_recent_draft_name_1 = require("./_get-most-recent-draft-name");
const upgrade_draft_schema_1 = require("./upgrade-draft-schema");
function isSiteDraft(draft) {
    // Maybe a better way to do this, but can't use item type
    // because we have Web Mapping Application sites in the wild
    // and typeKeywords don't exist on drafts.
    //
    // We could always request the site item and check it as part of
    // this but I'd rather not since that's an extra XHR and this is a
    // pretty robust schema check.
    return (hub_common_1.getProp(draft, "data.values.capabilities") !== undefined &&
        hub_common_1.getProp(draft, "data.values.theme") !== undefined);
}
/**
 * Fetches the draft for a site or page if exists.
 * @param {*} siteOrPageId
 * @param {*} hubRequestOptions
 */
function fetchDraft(siteOrPageId, hubRequestOptions) {
    return _get_most_recent_draft_name_1._getMostRecentDraftName(siteOrPageId, hubRequestOptions)
        .then(draftResourceName => {
        let ret = null;
        if (draftResourceName) {
            ret = arcgis_rest_portal_1.getItemResource(siteOrPageId, {
                fileName: draftResourceName,
                readAs: "json",
                authentication: hubRequestOptions.authentication,
                portal: hubRequestOptions.portal
            });
        }
        return ret;
    })
        .then((draft) => {
        if (draft && isSiteDraft(draft)) {
            draft = upgrade_draft_schema_1.upgradeDraftSchema(draft);
        }
        return draft;
    });
}
exports.fetchDraft = fetchDraft;
//# sourceMappingURL=fetch-draft.js.map