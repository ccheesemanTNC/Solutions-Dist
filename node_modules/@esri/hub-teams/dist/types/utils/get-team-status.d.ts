import { IItem, IUser } from "@esri/arcgis-rest-types";
import { IHubRequestOptions } from "@esri/hub-common";
import { ITeamStatus } from "../types";
/**
 * Given an item, a teamType and a user, return the status
 * of the team ('ok', 'missing', 'broken', 'fixable' ), along
 * with specific details:
 * id: id of the group
 * isMissing: was the group simply never created?
 * isBroken: true if the item has an id for the group, but the group can not be found
 * canFix: true if user can create the group
 * If a team that a route depends on returns `isBroken` the route should redirect
 * to /teams/repair, which will do a full inspection, list things that are broken
 * and then conduct any repairs that can be done. It will list the issues, with
 * the intent of training customers to NOT mess with Team groups in AGO.
 * Once repairs are complete, the user will click a button to return to the route they
 * we attempting to enter before this diversion.
 *
 * @export
 * @param {IItem} item Site or Initiative ITEM (not model)
 * @param {("core" | "content" | "followers")} teamType Type of team to check for
 * @param {IUser} user User Object
 * @param {IHubRequestOptions} ro Auth
 * @return {*}  {Promise<ITeamStatus>}
 */
export declare function getTeamStatus(item: IItem, teamType: "core" | "content" | "followers", user: IUser, ro: IHubRequestOptions): Promise<ITeamStatus>;
