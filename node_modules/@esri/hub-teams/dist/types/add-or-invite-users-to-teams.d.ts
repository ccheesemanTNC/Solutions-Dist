import { ArcGISRequestError, IAuthenticationManager } from "@esri/arcgis-rest-request";
import { IAddOrInviteEmail, IAddOrInviteToTeamResult, IUserWithOrgType } from "./types";
/**
 * addOrInviteUsersToTeams adds/invites N users to N teams
 * Initial entry point function for add/invite members flow
 * when dealing with multiple teams.
 * Responses from each group are then consolidated into the final returned object.
 *
 * @export
 * @param {string[]} groupIds array of groups we are adding users to
 * @param {IUserWithOrgType[]} users array of users to add to those teams
 * @param {IAuthenticationManager} primaryRO primary requestOptions
 * @param {boolean} [canAutoAddUser=false] Can we automatically add a user to the team?
 * @param {boolean} [addUserAsGroupAdmin=false] Can the user be added to a team as an administrator of that team?
 * @param {IAddOrInviteEmail} [email] Email object contains auth for the email && the email object itself
 * @return {*}  {Promise<{
 *   notAdded: string[];
 *   notInvited: string[];
 *   notEmailed: string[];
 *   errors: ArcGISRequestError[];
 *   responses: IAddOrInviteToTeamResult[];
 * }>} Results object
 */
export declare function addOrInviteUsersToTeams(groupIds: string[], users: IUserWithOrgType[], primaryRO: IAuthenticationManager, canAutoAddUser?: boolean, addUserAsGroupAdmin?: boolean, email?: IAddOrInviteEmail): Promise<{
    notAdded: string[];
    notInvited: string[];
    notEmailed: string[];
    errors: ArcGISRequestError[];
    responses: IAddOrInviteToTeamResult[];
}>;
