import { createGroup, protectGroup } from "@esri/arcgis-rest-portal";
import { getUniqueGroupTitle } from "./get-unique-group-title";
import { getAllowedGroupAccess } from "./get-allowed-group-access";
/**
 * Create a team group. Will ensure the team name is unique in the users org
 * and return the group, with appropriate `.userMembership` attached.
 * @param {Object} user Current User
 * @param {Object} group Group to create
 * @param {IHubRequestOptions} hubRequestOptions
 * @private
 */
export function _createTeamGroup(user, group, hubRequestOptions) {
    group.access = getAllowedGroupAccess(group.access, user, hubRequestOptions.portalSelf);
    return getUniqueGroupTitle(group.title, hubRequestOptions)
        .then(function (uniqueTitle) {
        group.title = uniqueTitle;
        return createGroup({
            group: group,
            authentication: hubRequestOptions.authentication
        });
    })
        .then(function (createResponse) {
        group.id = createResponse.group.id;
        return protectGroup({
            id: group.id,
            authentication: hubRequestOptions.authentication
        });
    })
        .then(function () {
        group.userMembership = {
            username: user.username,
            memberType: "owner",
            applications: 0
        };
        return group;
    })
        .catch(function (ex) {
        throw Error("Error in team-utils::_createTeamGroup " + ex);
    });
}
//# sourceMappingURL=_create-team-group.js.map