import { __awaiter, __generator } from "tslib";
import { handleNoUsers } from "./handle-no-users";
import { processInviteUsers } from "./process-invite-users";
/**
 * @private
 * Handles add/invite logic for partnered org users.
 * It returns either an empty instance of the addOrInviteResponse
 * object, or their response from inviting users.
 *
 * @export
 * @param {IAddOrInviteContext} context context object
 * @return {IAddOrInviteResponse} response object
 */
export function addOrInvitePartneredUsers(context) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            // If there are no org users return handling no users
            if (!context.partnered || context.partnered.length === 0) {
                // we return an empty object because
                // if you leave out any of the props
                // from the final object and you are concatting together arrays you can concat
                // an undeifined inside an array which will throw off array lengths.
                return [2 /*return*/, handleNoUsers()];
            }
            // process invite
            return [2 /*return*/, processInviteUsers(context, "partnered")];
        });
    });
}
//# sourceMappingURL=add-or-invite-partnered-users.js.map