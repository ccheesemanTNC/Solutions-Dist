import { cloneObject } from "@esri/hub-common";
import { WELLKNOWNTEAMS } from "../well-known-teams";
import { canUserCreateTeamInProduct } from "./can-user-create-team-in-product";
import { removeInvalidPrivs } from "./remove-invalid-privs";
import { applyPrivPropValuesToTemplate } from "./apply-priv-prop-values-to-template";
// TODO: Remove portalApiVersion at next breaking change
/**
 * Return array of group templates that the current user has licensing
 * and privs to create in the current environment (AGO vs Portal)
 * @param {object} user
 * @param {string} environment
 * @param {string} portalApiVersion
 * @param {string} subscriptionInfoType
 */
export function getUserCreatableTeams(user, environment, portalApiVersion, // Depracated, remove at next breaking change
subscriptionInfoType) {
    if (subscriptionInfoType === void 0) { subscriptionInfoType = ""; }
    /* tslint:disable no-console */
    console.warn("Hub.js::getUserCreatableTeams Deprecation warning portalApiVersion will be removed at v9.0.0");
    /* tslint:enable no-console */
    var teams = WELLKNOWNTEAMS;
    // Online is not properly respecting addExternalMembersToGroup for
    // certain subscription types known ones so far: Trial, personal use, developer, and evaluation
    var updatedUser = removeInvalidPrivs(user, subscriptionInfoType);
    // Update templates and remove the ones that aren't applicable.
    return cloneObject(teams).reduce(function (acc, teamTmpl) {
        // Update template based on privPropValue
        var copyTemplate = applyPrivPropValuesToTemplate(updatedUser, teamTmpl);
        // If the user can create the team....
        if (canUserCreateTeamInProduct(updatedUser, environment, copyTemplate)) {
            // Add the team to the accumulator
            acc.push(copyTemplate);
        }
        return acc;
    }, []);
}
//# sourceMappingURL=get-user-creatable-teams.js.map