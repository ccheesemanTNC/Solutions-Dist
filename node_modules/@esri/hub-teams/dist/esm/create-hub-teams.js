import { getHubProduct, getCulture, convertToWellKnownLocale, fetchHubTranslation, getSubscriptionType, } from "@esri/hub-common";
import { getUserCreatableTeams } from "./utils/get-user-creatable-teams";
import { _createTeamGroups } from "./utils/_create-team-groups";
/**
 * Create all the groups (aka Teams) required for a Site or Initiative
 * The group names are derived from the Site/Initiative title. Group names
 * must be unique on create, so if necessary we will increment the names
 * after translation. If you need to ADD a Team to an existing Site/Initiative,
 * use the teams-service::addTeams function
 * @param {ICreateHubTeamsOptions} createHubTeamsOptions
 */
export function createHubTeams(opts) {
    var title = opts.title, types = opts.types, hubRequestOptions = opts.hubRequestOptions;
    var product = getHubProduct(hubRequestOptions.portalSelf);
    // get all the groups that this user can create in this environment
    // and filter just the team types requested
    var subscriptionType = getSubscriptionType(hubRequestOptions.portalSelf);
    var teamsToCreate = getUserCreatableTeams(hubRequestOptions.portalSelf.user, product, hubRequestOptions.portalSelf.currentVersion, subscriptionType).filter(function (g) {
        return types.indexOf(g.config.type) > -1;
    });
    // get the culture out of the
    var culture = getCulture(hubRequestOptions);
    var locale = convertToWellKnownLocale(culture);
    // Fire that off
    return fetchHubTranslation(locale, hubRequestOptions.portalSelf)
        .then(function (translations) {
        // create the team groups
        return _createTeamGroups(title, teamsToCreate, translations, hubRequestOptions);
    })
        .catch(function (ex) {
        throw Error("Error in team-utils::createHubTeams " + ex);
    });
}
//# sourceMappingURL=create-hub-teams.js.map