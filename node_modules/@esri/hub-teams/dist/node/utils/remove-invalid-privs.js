"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeInvalidPrivs = void 0;
const hub_common_1 = require("@esri/hub-common");
const ALLOWED_SUBSCRIPTION_TYPES = [
    "Demo & Marketing",
    "Demo and Marketing",
    "Organizational Plan",
    "Community",
    "In House",
    "ConnectED",
    "ELA",
    "Education Site License",
    "Education",
    "HUP Online",
];
/**
 * TODO: If/when AGO implements this logic or runs a script on their end we can remove
 * this logic, or simply return passed in user.
 * Returns a cloned copy of the user object with updated privileges
 * based on whether or not the user has a subscription type not in the
 * allowed list
 * @param {object} user
 * @param {string} subscriptionInfoType
 * @returns
 */
function removeInvalidPrivs(user, subscriptionInfoType) {
    // Clone User
    const clonedUser = hub_common_1.cloneObject(user);
    // Get allowed list of sub types
    const allowedSubscriptionTypes = ALLOWED_SUBSCRIPTION_TYPES;
    // If portal self has a sub type OTHER than one of the allowed ones...
    if (!hub_common_1.includes(allowedSubscriptionTypes, subscriptionInfoType)) {
        clonedUser.privileges = hub_common_1.without(clonedUser.privileges, "portal:user:addExternalMembersToGroup");
    }
    return clonedUser;
}
exports.removeInvalidPrivs = removeInvalidPrivs;
//# sourceMappingURL=remove-invalid-privs.js.map