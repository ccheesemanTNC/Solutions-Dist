"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addOrInviteOrgUsers = void 0;
const handle_no_users_1 = require("./handle-no-users");
const process_auto_add_users_1 = require("./process-auto-add-users");
const process_invite_users_1 = require("./process-invite-users");
/**
 * @private
 * Handles add/invite logic for Org users
 * It returns either an empty instance of the addOrInviteResponse
 * object, or either ther esponse from processing auto adding a users or inviting a user
 *
 * @export
 * @param {IAddOrInviteContext} context context object
 * @return {IAddOrInviteResponse} response object
 */
async function addOrInviteOrgUsers(context) {
    // If there are no org users return handling no users
    if (!context.org || context.org.length === 0) {
        // we return an empty object because
        // if you leave out any of the props
        // from the final object and you are concatting together arrays you can concat
        // an undeifined inside an array which will throw off array lengths.
        return handle_no_users_1.handleNoUsers();
    }
    // for org user if you have assignUsers then auto add the user
    // if not then invite the user
    return context.canAutoAddUser
        ? process_auto_add_users_1.processAutoAddUsers(context, "org")
        : process_invite_users_1.processInviteUsers(context, "org");
}
exports.addOrInviteOrgUsers = addOrInviteOrgUsers;
//# sourceMappingURL=add-or-invite-org-users.js.map