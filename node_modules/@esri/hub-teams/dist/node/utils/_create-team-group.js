"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._createTeamGroup = void 0;
const arcgis_rest_portal_1 = require("@esri/arcgis-rest-portal");
const get_unique_group_title_1 = require("./get-unique-group-title");
const get_allowed_group_access_1 = require("./get-allowed-group-access");
/**
 * Create a team group. Will ensure the team name is unique in the users org
 * and return the group, with appropriate `.userMembership` attached.
 * @param {Object} user Current User
 * @param {Object} group Group to create
 * @param {IHubRequestOptions} hubRequestOptions
 * @private
 */
function _createTeamGroup(user, group, hubRequestOptions) {
    group.access = get_allowed_group_access_1.getAllowedGroupAccess(group.access, user, hubRequestOptions.portalSelf);
    return get_unique_group_title_1.getUniqueGroupTitle(group.title, hubRequestOptions)
        .then(uniqueTitle => {
        group.title = uniqueTitle;
        return arcgis_rest_portal_1.createGroup({
            group: group,
            authentication: hubRequestOptions.authentication
        });
    })
        .then(createResponse => {
        group.id = createResponse.group.id;
        return arcgis_rest_portal_1.protectGroup({
            id: group.id,
            authentication: hubRequestOptions.authentication
        });
    })
        .then(() => {
        group.userMembership = {
            username: user.username,
            memberType: "owner",
            applications: 0
        };
        return group;
    })
        .catch(ex => {
        throw Error(`Error in team-utils::_createTeamGroup ${ex}`);
    });
}
exports._createTeamGroup = _createTeamGroup;
//# sourceMappingURL=_create-team-group.js.map